openapi: 3.0.3
info:
  description: API для управления пользователями
  title: User Management API
  version: 1.0.0
servers:
- url: https://api.example.com/v1
paths:
  /users:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Успешный ответ
      summary: Список пользователей
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Пользователь создан
      summary: Создание пользователя
  /users/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Пользователь удален
        "404":
          description: Пользователь не найден
      summary: Удаление пользователя по ID
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Успешный ответ
        "404":
          description: Пользователь не найден
      summary: Получить пользователя по ID
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Пользователь обновлен
        "404":
          description: Пользователь не найден
      summary: Редактирование пользователя по ID
  /users/{id}/friends:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_users__id__friends_post_request'
        required: true
      responses:
        "200":
          description: Друг удален
      summary: Удалить друга из списка
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Список друзей
      summary: Получить список друзей пользователя
    post:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_users__id__friends_post_request'
        required: true
      responses:
        "200":
          description: Друг добавлен
      summary: Добавить друга пользователю
components:
  schemas:
    User:
      example:
        name: name
        id: 0
        email: email
        friends:
        - 6
        - 6
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        friends:
          items:
            type: integer
          type: array
      type: object
    UserCreate:
      example:
        friend_ids:
        - 0
        - 0
        name: name
        email: email
      properties:
        name:
          type: string
        email:
          type: string
        friend_ids:
          items:
            type: integer
          type: array
      required:
      - email
      - name
      type: object
    UserUpdate:
      example:
        name: name
        email: email
        friends:
        - 0
        - 0
      properties:
        name:
          type: string
        email:
          type: string
        friends:
          items:
            type: integer
          type: array
      type: object
    _users__id__friends_post_request:
      properties:
        friendId:
          type: string
      type: object
